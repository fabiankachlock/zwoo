@using System.Text.RegularExpressions
@using BackendHelper

@inject DialogService dialogService

<RadzenTemplateForm TItem="string" Data=@_password Submit=@OnSubmit>
    <div class="row mb-2">
        <RadzenPassword Name="Password" @bind-Value=@_password Style="display: block" class="w-100" Placeholder="New Password..."/>
        <RadzenRequiredValidator Component="Password" Text="Password is Required\n" Popup="true"/>
        <RadzenCompareValidator Component="Password" Visible="@(!Regex.Match(_password, "[0-9]+").Success)" Text="Password must Contain a Number" Popup="false"/>
        <RadzenCompareValidator Component="Password" Visible="@(!Regex.Match(_password, "[a-zA-Z]+").Success)" Text="Password must Contain a Character" Popup="false"/>
        <RadzenCompareValidator Component="Password" Visible="@(!Regex.Match(_password, "[!#$%&'*+/=?^_Â´{|}\\-[\\]]+").Success)" Text="Password must Contain a Special Character" Popup="false"/>
        <RadzenLengthValidator Component="Password" Min="8" Text="Password should be at least 8 characters long" Popup="false"/>
        <RadzenLengthValidator Component="Password" Max="50" Text="Password should be at most 50 characters long" Popup="false"/>
    </div>
    <div class="row">
        <div class="col-md-12 text-right">
            <RadzenButton Click="@((args) => dialogService.Close())" ButtonStyle="ButtonStyle.Secondary" Text="Cancel" Class="mr-1" />
            <RadzenButton ButtonType="ButtonType.Submit" Text="OK" />
        </div>
    </div>
</RadzenTemplateForm>


@code {

    [Parameter] public ulong Id { set; get; }

    private string _password = "";
    
    void OnSubmit()
    {
        if (StringHelper.IsValidPassword(_password))
        {
            dialogService.Close(_password);
        }
    }
}