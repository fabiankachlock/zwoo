@page "/change-user-password/{id}"
@using System.Text.RegularExpressions
@using BackendHelper

@inject DialogService dialogService

<RadzenTemplateForm TItem="string" Data="_password" Submit=@OnSubmit InvalidSubmit=@OnInvalidSubmit>
    <div class="row mb-5">
        <div class="col">
            <RadzenPassword @bind-Value="_password" Style="display: block" class="w-100" Placeholder="New Password..." Name="Password"/>
            <RadzenRequiredValidator Component="Password" Text="Password is Required\n" Popup="true"/>
            <RadzenCompareValidator Component="Password" Visible="@(!Regex.Match(_password, "[0-9]+").Success)" Style="position: absolute" Text="Password must Contain a Number" Popup="true"/>
            <RadzenCompareValidator Component="Password" Visible="@(!Regex.Match(_password, "[a-zA-Z]+").Success)" Style="position: absolute" Text="Password must Contain a Character" Popup="true"/>
            <RadzenCompareValidator Component="Password" Visible="@(!Regex.Match(_password, "[!#$%&'*+/=?^_Â´{|}\\-[\\]]+").Success)" Style="position: absolute" Text="Password must Contain a Special Character" Popup="true"/>
            <RadzenLengthValidator Component="Password" Min="8" Text="Password should be at least 8 characters long" Style="position: absolute" Popup="true"/>
            <RadzenLengthValidator Component="Password" Max="50" Text="Password should be at most 50 characters long" Style="position: absolute" Popup="true"/>
        </div>
    </div>
</RadzenTemplateForm>

<div class="row">
    <div class="col-md-12 text-right">
        <RadzenButton Click="@((args) => dialogService.Close())" ButtonStyle="ButtonStyle.Secondary" Text="Cancel" Style="width: 120px" Class="mr-1" />
        <RadzenButton Click="@(OnSubmit)" Text="OK" Style="width: 120px" />
    </div>
</div>

@code {

    [Parameter] public ulong Id { set; get; }

    private string _password = "";
    
    public class ChangePasswordDialogResult
    {
        public ChangePasswordDialogResult(bool changePassword, string password)
        {
            ChangePassword = changePassword;
            Password = password;
        }

        public bool ChangePassword { set; get; } = false;
        public string Password { set; get; } = "";
    }

    void OnSubmit()
    {
        if (StringHelper.IsValidPassword(_password))
            dialogService.Close(new ChangePasswordDialogResult(true, _password));
    }

    void OnInvalidSubmit() { } 
}